# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include directory-based project settings:
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# Docker
.dockerignore
docker-compose.override.yml

# Logs
logs/
*.log
log_*.txt

# Data files (keep structure, ignore content)
data/raw/
data/processed/
data/models/
data/cache/
data/exports/
data/temp/
!data/.gitkeep

# Machine Learning models and artifacts
*.pkl
*.joblib
*.h5
*.pb
*.onnx
*.tflite
models/
artifacts/
mlruns/
.mlflow/

# Datasets (usually too large for git)
*.csv
*.tsv
*.json
*.jsonl
*.parquet
*.avro
*.orc
*.feather

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Backup files
*.bak
*.backup
*.tmp
*.swp

# Database
*.db
*.sqlite
*.sqlite3

# Redis dump
dump.rdb

# Prometheus data
prometheus_data/

# Grafana data
grafana_data/

# MinIO data
minio_data/

# Kafka data
kafka_data/
zookeeper_data/
zookeeper_logs/

# PostgreSQL data
postgres_data/

# SSL certificates and keys
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
ssl/

# Configuration files with secrets
config/production.yml
config/secrets.yml
secrets/
credentials/

# Load testing results
load_test_results/
*.jmx

# Performance profiling
*.prof
*.cprof

# Memory dumps
*.dump
*.dmp

# Core dumps
core.*

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Kubernetes
*.kubeconfig

# Helm
charts/*.tgz

# CI/CD artifacts
.github/workflows/secrets/
.gitlab-ci-local/

# Documentation build
docs/build/
docs/site/

# Experiment tracking
experiments/
wandb/
tensorboard_logs/

# Temporary directories
tmp/
temp/
.tmp/
.temp/

# IDE specific files
.project
.classpath
.settings/
*.iml
*.ipr
*.iws

# Cache directories
.cache/
.npm/
.yarn/

# Python virtual environments (additional patterns)
pyvenv.cfg
lib64

# Jupyter Lab
.jupyter/

# IPython
.ipython/

# Pytest
.pytest_cache/

# Coverage
.coverage.*
htmlcov/
.tox/

# Local development overrides
docker-compose.local.yml
local_settings.py

# Monitoring and alerting configs with sensitive data
monitoring/alerts/production/
monitoring/configs/production/

# Application specific
# Recommendation engine specific ignores
user_profiles/
item_catalog/
interaction_logs/
recommendation_cache/
model_checkpoints/
training_data/
validation_data/
test_data/

# A/B testing results
ab_test_results/
experiment_data/

# Analytics exports
analytics_exports/
reports/
